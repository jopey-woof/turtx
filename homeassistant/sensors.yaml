# Turtle Monitoring System - Sensors Configuration
# Phase 1: Basic system sensors only (Fixed for Phase 2A)

# System monitoring sensors
- platform: systemmonitor
  resources:
    - type: disk_use_percent
      arg: /home
    - type: memory_use_percent
    - type: processor_use
    - type: last_boot

# Time and date sensors
- platform: time_date
  display_options:
    - time
    - date
    - date_time

# Simple template sensors (minimal to avoid dependency issues)
- platform: template
  sensors:
    system_temperature:
      friendly_name: "System Temperature"
      icon_template: mdi:thermometer
      value_template: "72"
      unit_of_measurement: "°F"
      
    uptime_display:
      friendly_name: "System Uptime"
      icon_template: mdi:clock-outline
      value_template: >
        {% set last_boot = states('sensor.last_boot') %}
        {% if last_boot and last_boot != 'unavailable' and last_boot != 'unknown' %}
          {% set uptime = as_timestamp(now()) - as_timestamp(last_boot) %}
          {% set days = (uptime // 86400) | int %}
          {% set remaining_seconds = uptime - (days * 86400) %}
          {% set hours = (remaining_seconds // 3600) | int %}
          {% set remaining_after_hours = remaining_seconds - (hours * 3600) %}
          {% set minutes = (remaining_after_hours // 60) | int %}
          {{ days }}d {{ hours }}h {{ minutes }}m
        {% else %}
          Just Started
        {% endif %}
        
    # System status sensors for dashboard
    turtle_system_status:
      friendly_name: "System Status"
      icon_template: mdi:turtle
      value_template: >
        {% if is_state('input_boolean.turtle_maintenance_mode', 'on') %}
          Maintenance
        {% elif is_state('input_boolean.turtle_manual_mode', 'on') %}
          Manual
        {% elif is_state('input_boolean.turtle_system_armed', 'on') %}
          Armed
        {% else %}
          Disarmed
        {% endif %}
        
    turtle_system_health:
      friendly_name: "System Health" 
      icon_template: mdi:check-circle
      value_template: >
        {% set cpu = states('sensor.processor_use') %}
        {% set memory = states('sensor.memory_use_percent') %}
        {% set disk = states('sensor.disk_use_percent_home') %}
        {% if cpu == 'unknown' or memory == 'unknown' or disk == 'unknown' %}
          Starting
        {% else %}
          {% set cpu_val = cpu | float %}
          {% set memory_val = memory | float %}
          {% set disk_val = disk | float %}
          {% if cpu_val > 80 or memory_val > 90 or disk_val > 90 %}
            Critical
          {% elif cpu_val > 60 or memory_val > 75 or disk_val > 75 %}
            Warning
          {% else %}
            Good
          {% endif %}
        {% endif %}
        
    # Status message sensor (replaces input_text)
    turtle_status_message:
      friendly_name: "Status Message"
      icon_template: mdi:message-text
      value_template: >
        {% set temp = states('sensor.turtle_temperature_fahrenheit') %}
        {% set humidity = states('sensor.turtle_humidity_percent') %}
        {% if temp != 'unavailable' and temp != 'unknown' and humidity != 'unavailable' and humidity != 'unknown' %}
          {% set temp_val = temp | float %}
          {% set humidity_val = humidity | float %}
          {% if temp_val > 85 %}
            🚨 Temperature Alert: {{ temp_val }}°F - Check habitat!
          {% elif temp_val < 70 %}
            ❄️ Temperature Low: {{ temp_val }}°F - Check heating!
          {% elif humidity_val < 60 %}
            💧 Humidity Low: {{ humidity_val }} percent - Add moisture!
          {% elif humidity_val > 80 %}
            💦 Humidity High: {{ humidity_val }} percent - Check ventilation!
          {% else %}
            ✅ All Systems Normal - Temp: {{ temp_val }}°F, Humidity: {{ humidity_val }} percent
          {% endif %}
        {% else %}
          🔄 Initializing sensors...
        {% endif %}
        
    # Real TEMPerHUM sensor data - Using native custom component output
    turtle_temperature_fahrenheit:
      friendly_name: "Turtle Temperature" 
      icon_template: mdi:thermometer
      value_template: >
        {% if states('sensor.turtle_habitat_temperature') != 'unavailable' %}
          {{ states('sensor.turtle_habitat_temperature') | float * 9/5 + 32 | round(1) }}
        {% else %}
          Sensor Unavailable
        {% endif %}
      unit_of_measurement: "°F"
      
    turtle_humidity_percent:
      friendly_name: "Turtle Humidity"
      icon_template: mdi:water-percent
      value_template: >
        {% if states('sensor.turtle_habitat_humidity') != 'unavailable' %}
          {{ states('sensor.turtle_habitat_humidity') | float | round(1) }}
        {% else %}
          Sensor Unavailable
        {% endif %}
      unit_of_measurement: "%"

# Numeric sensors for automations (these will only have numeric values)
- platform: template
  sensors:
    turtle_temperature_numeric:
      friendly_name: "Turtle Temperature (Numeric)"
      icon_template: mdi:thermometer
      value_template: >
        {% if states('sensor.turtle_habitat_temperature') != 'unavailable' %}
          {{ states('sensor.turtle_habitat_temperature') | float * 9/5 + 32 | round(1) }}
        {% else %}
          0
        {% endif %}
      unit_of_measurement: "°F"
      
    turtle_humidity_numeric:
      friendly_name: "Turtle Humidity (Numeric)"
      icon_template: mdi:water-percent
      value_template: >
        {% if states('sensor.turtle_habitat_humidity') != 'unavailable' %}
          {{ states('sensor.turtle_habitat_humidity') | float | round(1) }}
        {% else %}
          0
        {% endif %}
      unit_of_measurement: "%"
